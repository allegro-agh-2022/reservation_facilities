services:
  operational-app:
    image: 'operational-service-backend:latest'
    build:
      context: ./operational
    container_name: operational-service-backend
    depends_on:
      - db-operational
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-operational:5432/compose-postgres
      - SPRING_DATASOURCE_USERNAME=compose-postgres
      - SPRING_DATASOURCE_PASSWORD=compose-postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop
      - SECRET_KEY=bigosik
    ports:
      - 8080:8080
#    networks:
#      - elastic

  archive-app:
    image: 'archive-service-backend:latest'
    build:
      context: ./archive
    container_name: archive-service-backend
    depends_on:
      - db-archive
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-archive:5432/compose-postgres
      - SPRING_DATASOURCE_USERNAME=compose-postgres
      - SPRING_DATASOURCE_PASSWORD=compose-postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop
    ports:
      - 8081:8081
#    networks:
#      - elastic

  db-operational:
    image: 'postgres:13.1-alpine'
    container_name: operational-db
    environment:
      - POSTGRES_USER=compose-postgres
      - POSTGRES_PASSWORD=compose-postgres

  db-archive:
    image: 'postgres:13.1-alpine'
    container_name: archive_db
    environment:
      - POSTGRES_USER=compose-postgres
      - POSTGRES_PASSWORD=compose-postgres

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.3.3
    container_name: elasticsearch_springboot1
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.type=single-node"
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - elastic

  kibana:
    image: docker.elastic.co/kibana/kibana:8.3.3
    container_name: kibana_springboot1
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    depends_on:
      - elasticsearch
    networks:
      - elastic

  logstash:
    image: docker.elastic.co/logstash/logstash:8.3.3
    container_name: logstash_springboot1
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elastic
    depends_on:
      - elasticsearch

networks:
  elastic:
    driver: bridge

volumes:
  elasticsearch_data:
    driver: local